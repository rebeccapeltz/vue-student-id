{"version":3,"sources":["webpack:///src/components/src/components/Form.vue","webpack:///src/components/src/components/Banner.vue","webpack:///src/components/src/components/Gallery.vue","webpack:///src/src/App.vue"],"names":[],"mappings":"AAkTA,8BACA,YAAA,CACA,kBAAA,CACA,kBACA,CAEA,oCACA,QAAA,CACA,eAAA,CACA,aACA,CAEA,oCACA,qBAAA,CACA,QAAA,CACA,aAAA,CACA,qBAAA,CACA,uBACA,CAEA,qCACA,oBAAA,CACA,wBAAA,CACA,qBAAA,CACA,UAAA,CACA,cACA,CACA,8CACA,qBAAA,CACA,WACA,CACA,2CACA,wBACA,CAEA,yCACA,oCACA,YACA,CACA,qCACA,kBACA,CACA,8CACA,qBAAA,CACA,WACA,CAEA,oCACA,cACA,CACA,CACA,yBACA,8BACA,qBAAA,CACA,mBACA,CACA,qCACA,gBACA,CACA,CAGA,kCACA,oBACA,CACA,mCACA,YACA,CAEA,sDACA,qBACA,CAOA,+JACA,qBACA,CAEA,6BACA,oBAAA,CACA,SAAA,CACA,WAAA,CACA,gBAAA,CACA,cACA,CAEA,kCACA,aAAA,CACA,UAAA,CACA,WAAA,CACA,oCACA,CACA,qCACA,kBACA,CACA,qCACA,kBACA,CACA,qCACA,kBACA,CACA,qCACA,kBACA,CACA,qCACA,kBACA,CACA,qCACA,kBACA,CCjXA,yBACA,uCAAA,CACA,UAAA,CACA,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eACA,CACA,6BACA,qBAAA,CACA,YACA,CACA,8BACA,aAAA,CACA,+BAAA,CACA,UAAA,CACA,kBACA,CACA,mCACA,aAMA,CACA,qEANA,KAAA,CACA,YAAA,CACA,iBAAA,CAEA,kCASA,CAPA,kCACA,YAMA,CACA,8BACA,MAAA,CACA,QAAA,CACA,UACA,CACA,oCAEA,WAAA,CACA,WAAA,CACA,WAAA,CACA,WAAA,CACA,kBAAA,CACA,wBAAA,CACA,gBAAA,CACA,eAAA,CACA,oBAAA,CACA,UAAA,CACA,iBAAA,CACA,oBACA,CACA,8BACA,oBAAA,CACA,eAAA,CACA,UAAA,CACA,iBAAA,CACA,iBAAA,CACA,oBAAA,CACA,cAAA,CACA,cAAA,CACA,gBACA,CACA,oCACA,kBAAA,CACA,cAAA,CACA,sBACA,CC3EA,iCACA,YAAA,CACA,yDAAA,CACA,aACA,CCaA,EACA,qBACA,CACA,KACA,aAAA,CACA,uCAAA,CACA,kBACA","file":"app.8dab0062.css","sourcesContent":["<template>\n  <div class=\"form\">\n    <form class=\"form-inline\">\n      <label for=\"fname\">First name:</label><br />\n      <input\n        type=\"text\"\n        v-model=\"fname\"\n        id=\"fname\"\n        name=\"fname\"\n        value=\"\"\n        size=\"12\"\n        maxlength=\"11\"\n        placeholder=\"First name\"\n      /><br />\n      <label for=\"lname\">Last name:</label><br />\n      <input\n        type=\"text\"\n        v-model=\"lname\"\n        id=\"lname\"\n        name=\"lname\"\n        value=\"\"\n        size=\"12\"\n        maxlength=\"11\"\n        placeholder=\"Last name\"\n      /><br />\n\n      <label for=\"title\">Title:</label><br />\n      <input\n        type=\"text\"\n        v-model=\"title\"\n        id=\"title\"\n        name=\"title\"\n        value=\"\"\n        size=\"12\"\n        maxlength=\"22\"\n        placeholder=\"Title\"\n      /><br />\n      <label for=\"org\">Organization:</label><br />\n      <input\n        type=\"text\"\n        v-model=\"org\"\n        id=\"org\"\n        name=\"org\"\n        value=\"\"\n        size=\"12\"\n        maxlength=\"22\"\n        placeholder=\"Organization\"\n      /><br />\n      <br />\n      <label for=\"bgcolor\">Background color:</label><br />\n      <div class=\"color-container\">\n        <input\n          type=\"radio\"\n          v-model=\"bgcolor\"\n          name=\"bgcolor\"\n          id=\"y1\"\n          value=\"F2D865\"\n        />\n        <label class=\"color\" for=\"y1\"><span class=\"y1\"></span></label>\n\n        <input\n          type=\"radio\"\n          v-model=\"bgcolor\"\n          name=\"bgcolor\"\n          id=\"y2\"\n          value=\"F4B21B\"\n        />\n        <label class=\"color\" for=\"y2\"><span class=\"y2\"></span></label>\n\n        <input\n          type=\"radio\"\n          v-model=\"bgcolor\"\n          name=\"bgcolor\"\n          id=\"y3\"\n          value=\"DB8226\"\n        />\n        <label class=\"color\" for=\"y3\"><span class=\"y3\"></span></label>\n\n        <input\n          type=\"radio\"\n          v-model=\"bgcolor\"\n          name=\"bgcolor\"\n          id=\"b1\"\n          value=\"0071BA\"\n        />\n        <label class=\"color\" for=\"b1\"><span class=\"b1\"></span></label>\n\n        <input\n          type=\"radio\"\n          v-model=\"bgcolor\"\n          name=\"bgcolor\"\n          id=\"b2\"\n          value=\"0E2F5A\"\n        />\n        <label class=\"color\" for=\"b2\"><span class=\"b2\"></span></label>\n\n        <input\n          type=\"radio\"\n          v-model=\"bgcolor\"\n          name=\"bgcolor\"\n          id=\"b3\"\n          value=\"231F20\"\n        />\n        <label class=\"color\" for=\"b3\"><span class=\"b3\"></span></label>\n      </div>\n      <button\n        id=\"upload\"\n        :disabled=\"inputRequired\"\n        v-on:click=\"uploadStudent\"\n        type=\"button\"\n      >\n        Upload Image\n      </button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapMutations, mapGetters } from 'vuex'\nimport ListAPIData from '../util/ListAPIData'\n\nexport default {\n  name: 'Form',\n  props: ['cloudname', 'preset'],\n  data: function() {\n    return {\n      fname: '',\n      lname: '',\n      title: '',\n      org: '',\n      bgcolor: '',\n      uploadWidget: null\n    }\n  },\n  methods: {\n    ...mapMutations(['insertStudent']),\n    clearForm: function() {\n      this.fname = ''\n      this.lname = ''\n      this.org = ''\n      this.bgcolor = ''\n    },\n    deleteNoFaceImage: function(result) {\n      console.log('deleteNoFaceImage')\n      const token = { token: result.info.delete_token }\n      fetch(\n        `https://api.cloudinary.com/v1_1/${this.cloudName}/delete_by_token`,\n        {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(token)\n        }\n      )\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          console.log(\n            'success deleting image without face',\n            JSON.stringify(data, null, 2)\n          )\n          //the upload button should be turned back on\n          // TODO upload button on?\n          // setUploadButton(true);\n          // toast(\"Image uploaded must have a face.\", \"warn\");\n        })\n        .catch(error => {\n          console.log('error deleting face', error)\n        })\n    },\n    hexdec: function(hex) {\n      return hex\n        .toLowerCase()\n        .split('')\n        .reduce(\n          (result, ch) => result * 16 + '0123456789abcdefgh'.indexOf(ch),\n          0\n        )\n    },\n    getContrast: function(hexcolor) {\n      let r = this.hexdec(hexcolor.substr(0, 2))\n      let g = this.hexdec(hexcolor.substr(2, 2))\n      let b = this.hexdec(hexcolor.substr(4, 2))\n      let l = r * 0.2126 + g * 0.7152 + b * 0.0722\n      return l >= 128 ? '000000' : 'ffffff'\n    },\n    createContextMap: function() {\n      return {\n        fname: this.fname || '',\n        lname: this.lname || '',\n        bgcolor: this.bgcolor || '',\n        color: this.getContrast(this.bgcolor),\n        title: this.title || '',\n        org: this.org || '',\n        uploadDate: new Date().toISOString()\n      }\n    },\n    uploadStudent: function() {\n      if (this.isUnique()) {\n        console.log('new student is unique')\n\n        this.uploadWidget = window.cloudinary.createUploadWidget(\n          {\n            cloudName: this.cloudname,\n            upload_preset: this.preset,\n            sources: ['local', 'url', 'camera', 'facebook'],\n            context: this.createContextMap(),\n            clientAllowedFormats: ['png', 'jpeg'],\n            return_delete_token: 1\n          },\n          (error, result) => {\n            //wait for success\n            if (!error) {\n              console.log('UW non error event', result.event)\n              if (result.event === 'success') {\n                console.log('success:', JSON.stringify(result, null, 2))\n                //TODO disable the upload button clearform\n                if (\n                  result.info &&\n                  result.info.faces &&\n                  result.info.faces.length > 0\n                ) {\n                  // toast(\"Successful face upload.\", \"info\");\n                  this.clearForm()\n                  //add image to gallery\n\n                  //make data into format in store\n                  this.insertStudent(\n                    ListAPIData.processSingleStudent(result.info,this.cloudname)\n                  )\n\n                  console.log(\n                    'new student added:',\n                    JSON.stringify(this.allStudents)\n                  )\n\n                  // put new student in an array and send to populate\n                  // TODO gallery\n                  // populateGallery([result.info],true);\n                } else {\n                  console.log('Successful upload but no face!')\n                  this.deleteNoFaceImage(result)\n                }\n              }\n              if (result.event === 'done') {\n                console.log('done event:', result.info)\n              }\n            } else {\n              console.log('UW error event', error)\n              // launch_toast(`Upload error: ${error}`, 'warn')\n            }\n          }\n        )\n        // toast(\"Successful face upload.\", \"info\");\n      } else {\n        // toast(\"Duplicates not allowed\", \"warn\");\n      }\n      this.uploadWidget.open()\n    },\n    isUnique: function() {\n      console.log('allStudent', this.allStudents)\n      const result = this.allStudents.filter(student => {\n        return (\n          student.fname === this.fname &&\n          student.lname === this.lname &&\n          student.title === this.title &&\n          student.org === this.org\n        )\n      })\n      return result.length === 0\n    },\n    doubleEncode: function(str) {\n      if (!str) return ''\n      let arr = str.split('')\n      let newArr = []\n      for (let c of arr) {\n        newArr.push(encodeURIComponent(encodeURIComponent(c)))\n      }\n      let newStr = newArr.join('')\n      return newStr\n    },\n    fullname: function(fname, lname) {\n      return `${this.doubleEncode(fname || '')}%20${this.doubleEncode(\n        lname || ''\n      )}`\n    }\n  },\n  computed: {\n    ...mapGetters(['allStudents']),\n\n    inputRequired: function() {\n      return !(\n        this.fname.length > 0 &&\n        this.lname.length > 0 &&\n        this.org.length > 0 &&\n        this.title.length > 0 &&\n        this.bgcolor.length > 0\n      )\n    }\n  }\n}\n</script>\n\n<style scoped>\n.form-inline {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n}\n\n.form-inline label {\n  margin: 0;\n  font-size: 0.8rem;\n  color: #0e2f5a;\n}\n\n.form-inline input {\n  vertical-align: middle;\n  margin: 0;\n  padding: 0.6rem;\n  background-color: #fff;\n  border: 0.3rem solid #ddd;\n}\n\n.form-inline button {\n  padding: 0.6rem 1.2rem;\n  background-color: #0e2f5a;\n  border: 1px solid #ddd;\n  color: white;\n  cursor: pointer;\n}\n.form-inline button:disabled {\n  background-color: gray;\n  cursor: none;\n}\n.form-inline button:hover {\n  background-color: royalblue;\n}\n\n@media only screen and (min-width: 800px) {\n  .form-inline label {\n    margin: 0.3rem;\n  }\n  .form-inline button {\n    margin: 0 0 0 0.3rem;\n  }\n  .form-inline button:disabled {\n    background-color: gray;\n    cursor: none;\n  }\n\n  .form-inline input {\n    margin: 0.3rem 0;\n  }\n}\n@media (max-width: 800px) {\n  .form-inline {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  .form-inline button {\n    margin-top: 0.3rem;\n  }\n}\n\n/* color select */\n.color-container {\n  display: inline-block;\n}\ninput[type='radio'] {\n  display: none;\n}\n\ninput[type='radio']:checked + label span {\n  transform: scale(1.25);\n}\ninput[type='radio']:checked + label .y1 {\n  border: 2px solid #000;\n}\ninput[type='radio']:checked + label .y2 {\n  border: 2px solid #000;\n}\ninput[type='radio']:checked + label .y3 {\n  border: 2px solid #000;\n}\n\nlabel.color {\n  display: inline-block;\n  width: 2em;\n  height: 25px;\n  margin-right: 2px;\n  cursor: pointer;\n}\n\nlabel.color span {\n  display: block;\n  width: 100%;\n  height: 100%;\n  transition: transform 0.2s ease-in-out;\n}\nlabel.color span.y1 {\n  background: #f2d865;\n}\nlabel.color span.y2 {\n  background: #f4b21b;\n}\nlabel.color span.y3 {\n  background: #db8226;\n}\nlabel.color span.b1 {\n  background: #0071ba;\n}\nlabel.color span.b2 {\n  background: #0e2f5a;\n}\nlabel.color span.b3 {\n  background: #231f20;\n}\n</style>\n","<template>\n  <div class=\"banner\">\n    <div v-if=\"show\" class= \"top full\">\n      <p>\n        This web page is to be used for instructional purposes. The data entered\n        is stored as meta data with your image on the course's Cloudinary\n        account. We ask that you don't share the link to this site publicly. You\n        can remove your data from this page by supplying the first name and last\n        name associated with your picture. This will open your email app and it\n        will be forwarded to training for deletion.\n      </p>\n      <p>\n        To delete your image and data from this page, provide first name and\n        last name used to create Student id:\n        <input type=\"text\"  v-model=\"firstName\" placeholder=\"First Name\" />\n        <input type=\"text\" v-model=\"lastName\" id=\"delete-lname\" placeholder=\"Last name\" />\n        <a href=\"\" v-on:click.stop.prevent=\"deleteEmail()\" class=\"email-body\">Delete</a>\n\n\n      </p>\n      <a class=\"close-msg\" v-on:click=\"show=false\" href=\"#\">OK</a>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Banner',\n  props: ['cloudname'],\n  data: function() {\n    return {\n      show: true,\n      firstName: '',\n      lastName: ''\n    }\n  },\n  methods: {\n    deleteEmail: function() {\n      let fname = this.firstName || 'first name not provided'\n      let lname = this.lastName || 'last name not provided'\n      let mailto = `mailto:support@cloudinary.com?subject=Remove me from Student ID Website&body=Delete ${fname} ${lname} from Student ID application for cloud ${this.cloudname}`\n      window.open(mailto)\n      // window.open(`mailto: /support@cloudinary.com?subject=Remove me from Student ID Website&body=${emailBody}`)\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.banner {\n  font-family: 'Times New Roman', Times, serif;\n  color: white;\n  background-color: black;\n  padding: 0 1rem;\n  margin: 0 1rem;\n  font-size: 0.9rem;\n}\n.banner div {\n  background-color: black;\n  padding: 1rem;\n}\n.banner .top {\n  display: block;\n  border-bottom: 2px solid #231f20;\n  top: -350px;\n  transition: top 0.5s;\n}\n.banner .top.show {\n  display: block;\n  top: 0;\n  margin-top: 0px;\n  transition: top 1s;\n  -webkit-transition-timing-function: ease-in;\n  transition-timing-function: ease-in;\n}\n.banner.top.hide {\n  display: none;\n  top: 0;\n  margin-top: 0px;\n  transition: top 1s;\n  -webkit-transition-timing-function: ease-in;\n  transition-timing-function: ease-in;\n}\n.banner.full {\n  left: 0;\n  margin: 0px;\n  width: 100%;\n}\n.banner .close-msg {\n  /* float: left; */\n  margin: 15px;\n  width: 100px;\n  height: 40px;\n  z-index: 100;\n  background: #db8226;\n  text-transform: uppercase;\n  line-height: 28px;\n  padding-top: 8px;\n  display: inline-block;\n  color: #fff;\n  text-align: center;\n  text-decoration: none;\n}\na.email-body {\n  display: inline-block;\n  background: gray;\n  color: #000;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 16px;\n  cursor: pointer;\n  margin-left: 1rem;\n}\na.email-body:hover {\n  background: lightgray;\n  cursor: pointer;\n  transition: 0.3s ease-in;\n}\n</style>\n","<template>\n  <div id=\"gallery\" class=\"grid-container\">\n    <article\n      v-for=\"student in allStudents\"\n      :key=\"student.public_id\"\n      class=\"student-listing\"\n    >\n      <div class=\"student-image\">\n        <a href=\"#\"\n          ><img\n            :width=\"width\"\n            :height=\"height\"\n            :src=\"student.URL\"\n            :alt=\"student.fullname\"\n        /></a>\n      </div>\n\n      <!-- <Article :student=\"encodedStudentData(student)\" /> -->\n    </article>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n// import Article from './components/Article.vue'\n// import cl from 'cloudinary-core'\n\nexport default {\n  name: 'Gallery',\n  components: {\n    // Article\n  },\n  data: function() {\n    return {\n      width: 300,\n      height: 400\n    }\n  },\n  computed: {\n    ...mapGetters(['allStudents'])\n  }\n}\n</script>\n<style scoped>\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 1rem;\n}\n</style>\n","<template>\n  <div id=\"app\">\n    <Banner :cloudname=\"cloudName\" />\n    <h1>\n      <span>{{ courseTitle }}</span> <span>{{ courseDate }}</span>\n    </h1>\n    <h2>Create a Badge</h2>\n    <Form :cloudname=\"cloudName\" :preset=\"preset\" />\n\n    <div class=\"child-page-listing\">\n      <h2>Badge Gallery</h2>\n\n      <Gallery />\n      <!-- end grid container -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport Form from './components/Form.vue'\nimport Banner from './components/Banner.vue'\nimport Gallery from './components/Gallery.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    Banner,\n    Form,\n    Gallery\n  },\n  data: function() {\n    return {\n      cloudName: '',\n      courseTitle: '',\n      courseDate: '',\n      preset: 'student-id',\n      dupsAllowed: false,\n      namedTransform: 'v-badge-color'\n    }\n  },\n  created() {\n    const urlParams = new URLSearchParams(window.location.search)\n    this.cloudName = urlParams.get('cn') || 'pictures77'\n    this.courseTitle = urlParams.get('title') || 'Test'\n    this.courseDate = urlParams.get('date') || '2020'\n    this.fetchStudents(this.cloudName)\n      .then(studentList => {\n        console.log(JSON.stringify(studentList, null, 2))\n      })\n      .catch(error => {\n        console.error(JSON.stringify(error, null, 2))\n      })\n  },\n  methods: {\n    ...mapActions(['fetchStudents'])\n  }\n}\n</script>\n\n<style>\n* {\n  box-sizing: border-box;\n}\nbody {\n  padding: 0.3rem;\n  font-family: 'Montserrat', arial, sans-serif;\n  background: #f2f2f2;\n}\n</style>\n"]}